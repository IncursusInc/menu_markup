<?php

/**
 * @file
 * Contains menu_markup.module.
 */

use Drupal\Component\Render\FormattableMarkup;

/**
 * Implements form_menu_link_content_form_alter.
 */
function menu_markup_form_menu_link_content_form_alter(array &$form, $form_state, $form_id) {

  // Get a list of node types/machine names and build a dynamic select list.
  $nodeTypeNames = node_type_get_names();

  $fields = \Drupal::config('menu_markup.config')->get('fields') ?: [];

  $fields['node_count_type']['options'] = $nodeTypeNames;

  // Get any existing values for the link currently being edited.
  $link = $form_state->getFormObject()->getEntity();
  $linkOptions = $link->link->first()->options ?: [];
  $existingvalues = isset($linkOptions['menu_markup']) ? $linkOptions['menu_markup'] : [];

  // Build the form elements for adding menu_markup stuff to the link currently being edited.
  $form['options']['menu_markup'] = [
    '#type' => 'details',
    '#title' => t('Menu Markup'),
    '#weight' => -2,
    '#tree' => TRUE,
  ];

  foreach ($fields as $attribute => $info) {

    $fieldType = !empty($info['options']) ? 'select' : 'textarea';

    $form['options']['menu_markup'][$attribute] = [
      '#type' => $fieldType,
      '#title' => $info['label'],
      '#description' => $info['description'],
      '#default_value' => isset($existingValues[$attribute]) ? $existingValues[$attribute] : '',
    ];

    if ($fieldType == 'select') {
      $form['options']['menu_markup'][$attribute]['#empty_option'] = t('- Select -');
      $form['options']['menu_markup'][$attribute]['#options'] = $info['options'];
    }
  }

  // Add the submit handler.
  $form['actions']['submit']['#submit'][] = 'menu_markup_menu_link_content_form_submit';
}

/**
 * Submit function / saves menu_markup options for the link being currently edited.
 *
 * @param array $form
 *    Drupal form array.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *    Drupal FormStateInterface object.
 */
function menu_markup_menu_link_content_form_submit($form, FormStateInterface $form_state) {
  $menu_link = $form_state->getFormObject()->getEntity();
  $options = ['menu_markup' => $form_state->getValue('menu_markup')];
  $menu_link_options = $menu_link->link->first()->options;

  $menu_link->link->first()->options = array_merge($menu_link_options, $options);
  $menu_link->save();
}

/**
 * Implements hook_link_alter().
 */
function menu_markup_link_alter(&$variables) {

  // Only do this if they've configured menu_markup properly for this link.
  if (isset($variables['options']['menu_markup']['link_markup'])) {

    // If we have a node type selected for this menu item, get the node count!
    if (isset($variables['options']['menu_markup']['node_count_type'])) {
      $query = \Drupal::entityQuery('node')
                  ->condition('type', $variables['options']['menu_markup']['node_count_type'])
                  ->condition('status', 1);

      $nids = $query->execute();
      $nodeCount = count($nids);
    }
    else {
      $nodeCount = 0;
    }

    // Rebuild the menu text.
    $titleText = $variables['text'];

    $markup = new FormattableMarkup($variables['options']['menu_markup']['link_markup'],
                       array('@title' => $titleText, '@nodeCount' => $nodeCount));

    $variables['text'] = $markup;
  }

}
